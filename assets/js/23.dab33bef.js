(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{203:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#算数运算符"}},[t._v("算数运算符")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-浮点数的精度问题"}},[t._v("1.浮点数的精度问题")])]),a("li",[a("a",{attrs:{href:"#_2-表达式和返回值"}},[t._v("2.表达式和返回值")])])])]),a("li",[a("a",{attrs:{href:"#递增和递减运算符"}},[t._v("递增和递减运算符")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-递增和递减运算符概述"}},[t._v("1.递增和递减运算符概述")])]),a("li",[a("a",{attrs:{href:"#_2-前置递增-num"}},[t._v("2.前置递增 ++num")])]),a("li",[a("a",{attrs:{href:"#_3-后置递增-num"}},[t._v("3.后置递增 num++")])]),a("li",[a("a",{attrs:{href:"#_4-前置-后置递减-num-num"}},[t._v("4.前置/后置递减 --num/num--")])])])]),a("li",[a("a",{attrs:{href:"#比较运算符"}},[t._v("比较运算符")])]),a("li",[a("a",{attrs:{href:"#逻辑运算符"}},[t._v("逻辑运算符")])]),a("li",[a("a",{attrs:{href:"#短路运算符-逻辑中断"}},[t._v("短路运算符(逻辑中断)")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-逻辑与"}},[t._v("1.逻辑与")])]),a("li",[a("a",{attrs:{href:"#_2-逻辑或"}},[t._v("2.逻辑或")])])])]),a("li",[a("a",{attrs:{href:"#赋值运算符"}},[t._v("赋值运算符")])]),a("li",[a("a",{attrs:{href:"#运算符优先级"}},[t._v("运算符优先级")])])])]),a("p"),t._v(" "),a("p",[t._v("运算符(operator)也成为"),a("strong",[t._v("操作符")]),t._v("，是用于实现赋值、比较和执行算数运算等功能的符号。")]),t._v(" "),a("p",[t._v("JavaScript中常用的运算符有：")]),t._v(" "),a("ul",[a("li",[t._v("算数运算符")]),t._v(" "),a("li",[t._v("递增和递减运算符")]),t._v(" "),a("li",[t._v("比较运算符")]),t._v(" "),a("li",[t._v("逻辑运算符")]),t._v(" "),a("li",[t._v("赋值运算符")])]),t._v(" "),a("h2",{attrs:{id:"算数运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[t._v("#")]),t._v(" 算数运算符")]),t._v(" "),a("p",[t._v("定义：算术运算使用的符号，用于执行两个变量或值的算术运算。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("加")]),t._v(" "),a("td",[t._v("10+20=30")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("减")]),t._v(" "),a("td",[t._v("10-20=-10")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("乘")]),t._v(" "),a("td",[t._v("10*2=20")])]),t._v(" "),a("tr",[a("td",[t._v("/")]),t._v(" "),a("td",[t._v("除")]),t._v(" "),a("td",[t._v("10/20=0.5")])]),t._v(" "),a("tr",[a("td",[t._v("%")]),t._v(" "),a("td",[t._v("取余数(取模)")]),t._v(" "),a("td",[t._v("返回除法的余数9%2=1，3%5=3")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-浮点数的精度问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-浮点数的精度问题"}},[t._v("#")]),t._v(" 1.浮点数的精度问题")]),t._v(" "),a("p",[t._v("浮点数值的最高精度是17位小数，但在进行算术计算时其精确度远远不如整数。")]),t._v(" "),a("blockquote",[a("p",[t._v("浮点数在算数运算符里会有问题")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0.30000000000000004")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//7.000000000000001")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("不能直接拿浮点数来进行比较")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("怎么判断一个数能够被整除？")])]),t._v(" "),a("p",[t._v("它的余数是0就说明这个数能被整除，这就是"),a("code",[t._v("%")]),t._v("取余运算符的主要用途。")]),t._v(" "),a("h3",{attrs:{id:"_2-表达式和返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-表达式和返回值"}},[t._v("#")]),t._v(" 2.表达式和返回值")]),t._v(" "),a("h4",{attrs:{id:"表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[t._v("#")]),t._v(" 表达式")]),t._v(" "),a("p",[t._v("是由数字、运算符、变量等以能求得数值的有意义排列方法所得的组合。")]),t._v(" "),a("p",[t._v("简单理解:是由数字、运算符、变量等组成的式子。")]),t._v(" "),a("h4",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("p",[a("strong",[t._v("表达式最终都会有一个结果，返回给我们，我们称为返回值")])]),t._v(" "),a("h2",{attrs:{id:"递增和递减运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递增和递减运算符"}},[t._v("#")]),t._v(" 递增和递减运算符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-递增和递减运算符概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-递增和递减运算符概述"}},[t._v("#")]),t._v(" 1.递增和递减运算符概述")]),t._v(" "),a("p",[t._v("如果需要反复给数字变量添加或减去1，可以使用递增"),a("code",[t._v("(++)")]),t._v("和递减"),a("code",[t._v("(--)")]),t._v("运算符来完成。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//num = num+1;//2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n")])])]),a("p",[t._v("在JS中，递增"),a("code",[t._v("(++)")]),t._v("和递减"),a("code",[t._v("(--)")]),t._v("既可以放在变量前面，也可以放在变量后面。放在变量前面时，我们可以称为"),a("strong",[t._v("q前置递增(递减)运算符")]),t._v("，放在变量后面时，我们可以称为"),a("strong",[t._v("后置递增(递减)运算符")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("递增和递减运算符必须和变量配合使用")])]),t._v(" "),a("h3",{attrs:{id:"_2-前置递增-num"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-前置递增-num"}},[t._v("#")]),t._v(" 2.前置递增 ++num")]),t._v(" "),a("p",[t._v("先自加，后返回值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类似于 age =age+1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//11")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//21")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-后置递增-num"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-后置递增-num"}},[t._v("#")]),t._v(" 3.后置递增 num++")]),t._v(" "),a("p",[t._v("先返回原值，后自加")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//前置递增和后置递增如果单独使用  效果是一样的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类似于 age =age+1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//11")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//20")]),t._v("\n")])])]),a("ul",[a("li",[t._v("前置递增和后置递增运算符可以简化代码的编写，让变量的值 +1 比以前写法更简单。")]),t._v(" "),a("li",[t._v("单独使用时，运行结果相同")]),t._v(" "),a("li",[t._v("与其他代码联用时，执行结果会不同。")]),t._v(" "),a("li",[t._v("开发时，大多使用后置递增/减")])]),t._v(" "),a("h3",{attrs:{id:"_4-前置-后置递减-num-num"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-前置-后置递减-num-num"}},[t._v("#")]),t._v(" 4.前置/后置递减 --num/num--")]),t._v(" "),a("p",[t._v("同递增")]),t._v(" "),a("h2",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),a("p",[t._v("定义：比较运算符(关系运算符)是两个数据进行比较时所使用的运算符，比较运算后，会返回一个布尔值作为结果。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("实例")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("<")])]),t._v(" "),a("td",[t._v("小于号")]),t._v(" "),a("td",[t._v("1<2")]),t._v(" "),a("td",[t._v("true")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(">")])]),t._v(" "),a("td",[t._v("大于号")]),t._v(" "),a("td",[t._v("1>2")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(">=")])]),t._v(" "),a("td",[t._v("大于等于")]),t._v(" "),a("td",[t._v("2>=2")]),t._v(" "),a("td",[t._v("true")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("<=")])]),t._v(" "),a("td",[t._v("小于等于")]),t._v(" "),a("td",[t._v("3<=2")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("==")])]),t._v(" "),a("td",[t._v("等于,默认自动转换数据类型")]),t._v(" "),a("td",[t._v("3==3")]),t._v(" "),a("td",[t._v("true")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("!=")])]),t._v(" "),a("td",[t._v("不于")]),t._v(" "),a("td",[t._v("3!=3")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("===")]),t._v(" "),a("code",[t._v("!==")])]),t._v(" "),a("td",[t._v("全等于 全不等 值和数据类型都一致")]),t._v(" "),a("td",[t._v("3==='3'")]),t._v(" "),a("td",[t._v("false")])])])]),t._v(" "),a("h2",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),a("p",[t._v("定义：用来进行布尔值运算的运算符，其返回值也是布尔值。开发中经常用于多个条件的判断。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("&&")])]),t._v(" "),a("td",[t._v("逻辑与(and),全真才真")]),t._v(" "),a("td",[t._v("true && false")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("||")])]),t._v(" "),a("td",[t._v("逻辑或(or),全假才假")]),t._v(" "),a("td",[t._v("true")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("!")])]),t._v(" "),a("td",[t._v("逻辑非(not)")]),t._v(" "),a("td",[t._v("!not")])])])]),t._v(" "),a("h2",{attrs:{id:"短路运算符-逻辑中断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#短路运算符-逻辑中断"}},[t._v("#")]),t._v(" 短路运算符(逻辑中断)")]),t._v(" "),a("p",[t._v("原理：当有多个表达式(值)时，左边的表达式值可以确定结果时，就不再继续运算右边的表达式的值。")]),t._v(" "),a("h3",{attrs:{id:"_1-逻辑与"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-逻辑与"}},[t._v("#")]),t._v(" 1.逻辑与")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("strong",[t._v("表达式1 && 表达式2")])]),t._v(" "),a("li",[t._v("如果第一个表达式的值为真，则返回表达式2")]),t._v(" "),a("li",[t._v("如果第一个表达式的值为假，则返回表达式1")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("122")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false,'',0,null,undefined,NaN为假")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-逻辑或"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-逻辑或"}},[t._v("#")]),t._v(" 2.逻辑或")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("strong",[t._v("表达式1 || 表达式2")])]),t._v(" "),a("li",[t._v("如果第一个表达式的值为真，则返回表达式1")]),t._v(" "),a("li",[t._v("如果第一个表达式的值为假，则返回表达式2")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("122")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//123")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n")])])]),a("h2",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),a("p",[t._v("定义：用来把数据赋值给变量的运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("=")])]),t._v(" "),a("td",[t._v("直接赋值")]),t._v(" "),a("td",[t._v("var userName = '我是值'")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("+=")]),t._v("、`-=``")]),t._v(" "),a("td",[t._v("加、减一个数后在赋值")]),t._v(" "),a("td",[t._v("var age = 10;age+=5;//15")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*=")]),t._v("、"),a("code",[t._v("/=")]),t._v("、"),a("code",[t._v("%=")])]),t._v(" "),a("td",[t._v("逻辑非(not)")]),t._v(" "),a("td",[t._v("var age=2; age *= 5 //10")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// num = num +1; num++")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//num = num + 2  //等价于 num+=2")]),t._v("\nnum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于 age = age + 5")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于 age = age - 5")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于 age = age*10")]),t._v("\n")])])]),a("h2",{attrs:{id:"运算符优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("优先级")]),t._v(" "),a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("顺序")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("小括号")]),t._v(" "),a("td",[t._v("()")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("一元运算符")]),t._v(" "),a("td",[t._v("++、--、!")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("算数运算符")]),t._v(" "),a("td",[t._v("先* / % 后 + -")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("关系运算符")]),t._v(" "),a("td",[t._v("> >= < <=")])]),t._v(" "),a("tr",[a("td",[t._v("5")]),t._v(" "),a("td",[t._v("相等运算符")]),t._v(" "),a("td",[t._v("== != === !==")])]),t._v(" "),a("tr",[a("td",[t._v("6")]),t._v(" "),a("td",[t._v("逻辑运算符")]),t._v(" "),a("td",[t._v("先 && 后")])]),t._v(" "),a("tr",[a("td",[t._v("7")]),t._v(" "),a("td",[t._v("相等运算符")]),t._v(" "),a("td",[t._v("=")])]),t._v(" "),a("tr",[a("td",[t._v("8")]),t._v(" "),a("td",[t._v("逗号运算符")]),t._v(" "),a("td",[t._v(",")])])])]),t._v(" "),a("ul",[a("li",[t._v("一元运算符里面的"),a("strong",[t._v("逻辑非优先级很高")])]),t._v(" "),a("li",[t._v("逻辑与比逻辑或优先级高")])])])}),[],!1,null,null,null);s.default=r.exports}}]);